{
	"info": {
		"_postman_id": "e6dd55c4-0649-47b6-8dbe-f43f7e2183eb",
		"name": "Personal Demographics Service - SmokeTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Update",
			"item": [
				{
					"name": "Retrieve Patient for Update",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "93736354-7188-4400-b39c-d3af52575887",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "94bef65e-f504-4c7e-9127-1d373b146234",
								"exec": [
									"\r",
									"if (pm.environment.get('environment').toLowerCase().includes('qa.api.service.nhs.uk')) {\r",
									"var response = pm.response.json();\r",
									"\r",
									"//check the response status\r",
									"pm.test(\"Response has a status of 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"//set the \"Etag\" Response header to a variable to be used in the Patch Request\r",
									"pm.environment.set('Etag', pm.response.headers.get(\"Etag\"))\r",
									"\r",
									"//check that the correct Response Headers have been returned in the response\r",
									"pm.test(\"Response contains the correct X-Request-ID header\", function() {\r",
									"    pm.expect(pm.request.headers.get(\"X-Request-ID\")).to.eql(pm.response.headers.get(\"X-Request-ID\"))\r",
									"})\r",
									"pm.test(\"Response contains the correct X-Correlation-ID header\", function() {\r",
									"    pm.expect(pm.request.headers.get(\"X-Correlation-ID\")).to.eql(pm.response.headers.get(\"X-Correlation-ID\"))\r",
									"})\r",
									"}\r",
									"\r",
									"else{\r",
									"    console.log(\"not checking responses, as these tests should only be checked when running against internal-qa\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "NHSD-Session-URID",
								"type": "text",
								"value": "1234"
							}
						],
						"url": {
							"raw": "{{environment}}/Patient/5990178182",
							"host": [
								"{{environment}}"
							],
							"path": [
								"Patient",
								"5990178182"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update - DOB",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "03af2f2e-3f5b-4666-ac4e-9346b55f3638",
								"exec": [
									"/*set new birthdate to day after original*/\r",
									"\r",
									"var moment = require('moment');\r",
									"    let randomYears = _.random(1, 70);\r",
									"    let randomMonths = _.random(1, 10);\r",
									"    pm.environment.set(\"birthDate\", moment().subtract(randomYears, 'years').subtract(randomMonths,'months').format(\"YYYY-MM-DD\"));\r",
									"    console.log(pm.environment.get(\"birthDate\"))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4e701ecb-75da-42cd-bd85-6b912a6201b9",
								"exec": [
									"if (pm.environment.get('environment').toLowerCase().includes('qa.api.service.nhs.uk')) {\r",
									"\r",
									"//check the response status\r",
									"pm.test(\"Response has a status of 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"})\r",
									"\r",
									"//set the \"Content-Location\" Response header to a variable to be used in the Message Polling Request\r",
									"pm.environment.set('Content-Location', pm.response.headers.get(\"Content-Location\").substr(1, 46))\r",
									"\r",
									"//check that the correct Response Headers have been returned in the response\r",
									"pm.test(\"Response contains the correct X-Request-ID header\", function() {\r",
									"    pm.expect(pm.request.headers.get(\"X-Request-ID\")).to.eql(pm.response.headers.get(\"X-Request-ID\"))\r",
									"})\r",
									"pm.test(\"Response contains the correct X-Correlation-ID header\", function() {\r",
									"    pm.expect(pm.request.headers.get(\"X-Correlation-ID\")).to.eql(pm.response.headers.get(\"X-Correlation-ID\"))\r",
									"})\r",
									"}\r",
									"\r",
									"else{\r",
									"    console.log(\"not checking responses, as these tests should only be checked when running against internal-qa\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"type": "text",
								"value": "{{Etag}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json-patch+json"
							},
							{
								"key": "NHSD-Session-URID",
								"type": "text",
								"value": "1234"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"patches\": [\r\n      { \"op\": \"replace\", \"path\": \"/birthDate\", \"value\": \"{{birthDate}}\" }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{environment}}/Patient/5990178182",
							"host": [
								"{{environment}}"
							],
							"path": [
								"Patient",
								"5990178182"
							]
						},
						"description": "Update DoB where the new DoB is later than the current DoB and check that the new DoB exist on the Patient record."
					},
					"response": []
				},
				{
					"name": "message Polling",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ee58e33f-7dfa-4050-b98c-8543fa97abbc",
								"exec": [
									"setTimeout(function () {\r",
									"}, 3000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a27c7dc4-784a-461f-a8eb-b84178cc3bea",
								"exec": [
									"\r",
									"if (pm.environment.get('environment').toLowerCase().includes('qa.api.service.nhs.uk')) {\r",
									"var response = pm.response.json();\r",
									"\r",
									"//check the response status\r",
									"pm.test(\"Response has a status of 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"//check the update has been made\r",
									"pm.test(\"Response contains updated patient record\", function() {\r",
									"    pm.expect(response.birthDate).to.eql(pm.environment.get(\"birthDate\"))\r",
									"})\r",
									"}\r",
									"\r",
									"else{\r",
									"    console.log(\"not checking responses, as these tests should only be checked when running against internal-qa\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json-patch+json"
							},
							{
								"key": "NHSD-Session-URID",
								"value": "1234",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{environment}}/:contentLocation",
							"host": [
								"{{environment}}"
							],
							"path": [
								":contentLocation"
							],
							"variable": [
								{
									"key": "contentLocation",
									"value": "{{Content-Location}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "_ping endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a50a778-7f84-4426-8a11-6b7d0a180c05",
						"exec": [
							"pm.test(\"Status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var versionRegex = /v[0-9]+\\.[0-9]+\\.[0-9]+-\\w+/;",
							"var onlyNumberRegex = /^\\d+$/;",
							"",
							"pm.test(\"Json body has version\", function () {",
							"    var version = pm.response.json().version;",
							"    var path = pm.request.url.path[0];  ",
							"    path == \"personal-demographics\" ? pm.expect(versionRegex.test(version)).to.be.true : pm.expect(version).to.equal(path);    ",
							"});",
							"",
							"pm.test(\"Json body has revision\", function () {",
							"    var revision = pm.response.json().revision;",
							"    pm.expect(onlyNumberRegex.test(revision)).to.be.true;",
							"});",
							"",
							"pm.test(\"Json body has releaseId\", function () {",
							"    var releaseId = pm.response.json().releaseId;",
							"    pm.expect(onlyNumberRegex.test(releaseId)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{environment}}/_ping",
					"host": [
						"{{environment}}"
					],
					"path": [
						"_ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "healthcheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7f21de14-f0e7-4501-986a-6323baeff455",
						"exec": [
							"pm.test(\"Returns Status code 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer  {{token}}"
					},
					{
						"key": "NHSD-Identity-JWT",
						"value": "{{jwt}}"
					},
					{
						"key": "NHSD-Session-URID",
						"value": "1234567890"
					},
					{
						"key": "NHSD-ASID",
						"value": "1234567890"
					}
				],
				"url": {
					"raw": "{{environment}}/healthcheck",
					"host": [
						"{{environment}}"
					],
					"path": [
						"healthcheck"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Patient",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "44b24407-3783-4e75-8f64-5baa8cd3f938",
						"exec": [
							"pm.environment.set(\"expected\", '{\"fullUrl\":\"https://int.api.service.nhs.uk/personal-demographics/Patient/9691715791\",\"resource\":{\"address\":[{\"extension\":[{\"extension\":[{\"url\":\"type\",\"valueCoding\":{\"code\":\"PAF\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-AddressKeyType\"}},{\"url\":\"value\",\"valueString\":\"06282137\"}],\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-AddressKey\"}],\"id\":\"InSfk\",\"line\":[\"25 TENSING ROAD\",\"SCUNTHORPE\",\"S HUMBERSIDE\"],\"period\":{\"start\":\"2020-03-24\"},\"postalCode\":\"DN16 3DU\",\"use\":\"home\"}],\"birthDate\":\"2020-03-02\",\"contact\":[{\"id\":\"02745D6A\",\"period\":{\"end\":\"2020-07-27\",\"start\":\"2020-02-27\"},\"relationship\":[{\"coding\":[{\"code\":\"C\",\"display\":\"Emergency Contact\",\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0131\"}]}],\"telecom\":[{\"system\":\"phone\",\"value\":\"0900000001\"}]}],\"deceasedDateTime\":\"2020-09-10T00:00:00+00:00\",\"extension\":[{\"extension\":[{\"url\":\"deathNotificationStatus\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"1\",\"display\":\"Informal - death notice received via an update from a local NHS Organisation such as GP or Trust\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-DeathNotificationStatus\",\"version\":\"1.0.0\"}]}},{\"url\":\"systemEffectiveDate\",\"valueDateTime\":\"2020-09-10T12:27:40+00:00\"}],\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-DeathNotificationStatus\"}],\"gender\":\"male\",\"generalPractitioner\":[{\"id\":\"zqGir\",\"identifier\":{\"period\":{\"start\":\"2020-04-24\"},\"system\":\"https://fhir.nhs.uk/Id/ods-organization-code\",\"value\":\"A20047\"},\"type\":\"Organization\"}],\"id\":\"9691715791\",\"identifier\":[{\"extension\":[{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-NHSNumberVerificationStatus\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"01\",\"display\":\"Number present and verified\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-NHSNumberVerificationStatus\",\"version\":\"1.0.0\"}]}}],\"system\":\"https://fhir.nhs.uk/Id/nhs-number\",\"value\":\"9691715791\"}],\"meta\":{\"security\":[{\"code\":\"U\",\"display\":\"unrestricted\",\"system\":\"https://www.hl7.org/fhir/valueset-security-labels.html\"}],\"versionId\":\"9\"},\"multipleBirthInteger\":1,\"name\":[{\"family\":\"LENNON\",\"given\":[\"Ivor\",\"Rupert\"],\"id\":\"tNMuA\",\"period\":{\"start\":\"2020-03-14\"},\"prefix\":[\"MR\"],\"use\":\"usual\"}],\"resourceType\":\"Patient\",\"telecom\":[{\"id\":\"gMVBF\",\"period\":{\"start\":\"2020-03-09\"},\"use\":\"mobile\",\"value\":\"0751709202\"},{\"id\":\"BVbMt\",\"period\":{\"start\":\"2020-04-01\"},\"use\":\"home\",\"value\":\"0110579104\"},{\"id\":\"IiJuS\",\"period\":{\"start\":\"2020-04-09\"},\"use\":\"work\",\"value\":\"9qfufp@sc9jo9.com\"},{\"extension\":[{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-OtherContactSystem\",\"valueCoding\":{\"code\":\"textphone\",\"display\":\"Minicom (Textphone)\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-OtherContactSystem\"}}],\"id\":\"7F0F5829\",\"period\":{\"end\":\"2021-12-31\",\"start\":\"2020-01-01\"},\"system\":\"other\",\"use\":\"home\",\"value\":\"01632960587\"}]},\"search\":{\"score\":1}}');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "83669b08-42c4-4363-b1d1-cf7e84e38b02",
						"exec": [
							"if (pm.environment.get('environment').toLowerCase().includes('qa.api.service.nhs.uk')) {\r",
							"\r",
							"var response = pm.response.json();\r",
							"\r",
							"//check status\r",
							"pm.test(\"Response has a status of 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"}\r",
							"\r",
							"else{\r",
							"    console.log(\"not checking responses, as these tests should only be checked when running against internal-qa\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "NHSD-Session-URID",
						"type": "text",
						"value": "1234"
					}
				],
				"url": {
					"raw": "{{environment}}/Patient?gender=male&birthdate=2020-03-02&family=LENNON",
					"host": [
						"{{environment}}"
					],
					"path": [
						"Patient"
					],
					"query": [
						{
							"key": "gender",
							"value": "male"
						},
						{
							"key": "birthdate",
							"value": "2020-03-02"
						},
						{
							"key": "family",
							"value": "LENNON"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve Patient",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3dcd079e-27db-40aa-a796-b9a45cc53164",
						"exec": [
							"pm.environment.set(\"expected\", '{\"address\":[{\"extension\":[{\"extension\":[{\"url\":\"type\",\"valueCoding\":{\"code\":\"PAF\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-AddressKeyType\"}},{\"url\":\"value\",\"valueString\":\"06282137\"}],\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-AddressKey\"}],\"id\":\"InSfk\",\"line\":[\"25 TENSING ROAD\",\"SCUNTHORPE\",\"S HUMBERSIDE\"],\"period\":{\"start\":\"2020-03-24\"},\"postalCode\":\"DN16 3DU\",\"use\":\"home\"}],\"birthDate\":\"2020-03-02\",\"contact\":[{\"id\":\"02745D6A\",\"period\":{\"end\":\"2020-07-27\",\"start\":\"2020-02-27\"},\"relationship\":[{\"coding\":[{\"code\":\"C\",\"display\":\"Emergency Contact\",\"system\":\"http://terminology.hl7.org/CodeSystem/v2-0131\"}]}],\"telecom\":[{\"system\":\"phone\",\"value\":\"0900000001\"}]}],\"deceasedDateTime\":\"2020-09-10T00:00:00+00:00\",\"extension\":[{\"extension\":[{\"url\":\"deathNotificationStatus\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"1\",\"display\":\"Informal - death notice received via an update from a local NHS Organisation such as GP or Trust\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-DeathNotificationStatus\",\"version\":\"1.0.0\"}]}},{\"url\":\"systemEffectiveDate\",\"valueDateTime\":\"2020-09-10T12:27:40+00:00\"}],\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-DeathNotificationStatus\"},{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-NominatedPharmacy\",\"valueReference\":{\"identifier\":{\"system\":\"https://fhir.nhs.uk/Id/ods-organization-code\",\"value\":\"Y12345\"}}},{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-PreferredDispenserOrganization\",\"valueReference\":{\"identifier\":{\"system\":\"https://fhir.nhs.uk/Id/ods-organization-code\",\"value\":\"C81621\"}}},{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-MedicalApplianceSupplier\",\"valueReference\":{\"identifier\":{\"system\":\"https://fhir.nhs.uk/Id/ods-organization-code\",\"value\":\"FYR20\"}}},{\"extension\":[{\"url\":\"language\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"fr\",\"display\":\"French\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-HumanLanguage\",\"version\":\"1.0.0\"}]}},{\"url\":\"interpreterRequired\",\"valueBoolean\":true}],\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-NHSCommunication\"},{\"extension\":[{\"url\":\"PreferredContactMethod\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"4\",\"display\":\"E-mail\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-PreferredContactMethod\"}]}},{\"url\":\"PreferredContactTimes\",\"valueString\":\"12:00\"},{\"url\":\"PreferredWrittenCommunicationFormat\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"12\",\"display\":\"Braille\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-PreferredWrittenCommunicationFormat\"}]}}],\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-ContactPreference\"},{\"url\":\"http://hl7.org/fhir/StructureDefinition/patient-birthPlace\",\"valueAddress\":{\"city\":\"Wolverhampton\",\"country\":\"GBR\"}}],\"gender\":\"male\",\"generalPractitioner\":[{\"id\":\"zqGir\",\"identifier\":{\"period\":{\"start\":\"2020-04-24\"},\"system\":\"https://fhir.nhs.uk/Id/ods-organization-code\",\"value\":\"A20047\"},\"type\":\"Organization\"}],\"id\":\"9691715791\",\"identifier\":[{\"extension\":[{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-NHSNumberVerificationStatus\",\"valueCodeableConcept\":{\"coding\":[{\"code\":\"01\",\"display\":\"Number present and verified\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-NHSNumberVerificationStatus\",\"version\":\"1.0.0\"}]}}],\"system\":\"https://fhir.nhs.uk/Id/nhs-number\",\"value\":\"9691715791\"}],\"meta\":{\"security\":[{\"code\":\"U\",\"display\":\"unrestricted\",\"system\":\"https://www.hl7.org/fhir/valueset-security-labels.html\"}],\"versionId\":\"9\"},\"multipleBirthInteger\":1,\"name\":[{\"family\":\"LENNON\",\"given\":[\"Ivor\",\"Rupert\"],\"id\":\"tNMuA\",\"period\":{\"start\":\"2020-03-14\"},\"prefix\":[\"MR\"],\"use\":\"usual\"}],\"resourceType\":\"Patient\",\"telecom\":[{\"id\":\"gMVBF\",\"period\":{\"start\":\"2020-03-09\"},\"use\":\"mobile\",\"value\":\"0751709202\"},{\"id\":\"BVbMt\",\"period\":{\"start\":\"2020-04-01\"},\"use\":\"home\",\"value\":\"0110579104\"},{\"id\":\"IiJuS\",\"period\":{\"start\":\"2020-04-09\"},\"use\":\"work\",\"value\":\"9qfufp@sc9jo9.com\"},{\"extension\":[{\"url\":\"https://fhir.nhs.uk/R4/StructureDefinition/Extension-UKCore-OtherContactSystem\",\"valueCoding\":{\"code\":\"textphone\",\"display\":\"Minicom (Textphone)\",\"system\":\"https://fhir.nhs.uk/R4/CodeSystem/UKCore-OtherContactSystem\"}}],\"id\":\"7F0F5829\",\"period\":{\"end\":\"2021-12-31\",\"start\":\"2020-01-01\"},\"system\":\"other\",\"use\":\"home\",\"value\":\"01632960587\"}]}');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fd67f79d-ac8d-487c-9329-d7344ce20281",
						"exec": [
							"\r",
							"if (pm.environment.get('environment').toLowerCase().includes('qa.api.service.nhs.uk')) {\r",
							"var response = pm.response.json();\r",
							"\r",
							"//check status\r",
							"pm.test(\"Response has a status of 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"//check the body of the response\r",
							"pm.test(\"Response contains the correct patient record\", function() {\r",
							"    pm.expect(JSON.stringify(response)).to.eql(pm.environment.get(\"expected\"))\r",
							"})\r",
							"\r",
							"//check that the correct Response Headers have been returned in the response\r",
							"pm.test(\"Response contains the correct X-Request-ID header\", function() {\r",
							"    pm.expect(pm.request.headers.get(\"X-Request-ID\")).to.eql(pm.response.headers.get(\"X-Request-ID\"))\r",
							"})\r",
							"pm.test(\"Response contains the correct X-Correlation-ID header\", function() {\r",
							"    pm.expect(pm.request.headers.get(\"X-Correlation-ID\")).to.eql(pm.response.headers.get(\"X-Correlation-ID\"))\r",
							"})\r",
							"}\r",
							"\r",
							"else{\r",
							"    console.log(\"not checking responses, as these tests should only be checked when running against internal-qa\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "NHSD-Session-URID",
						"type": "text",
						"value": "1234"
					}
				],
				"url": {
					"raw": "{{environment}}/Patient/9691715791",
					"host": [
						"{{environment}}"
					],
					"path": [
						"Patient",
						"9691715791"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0edd5108-d02e-4512-8e9c-8d0657d995ec",
				"type": "text/javascript",
				"exec": [
					"// set Authorization header",
					"    pm.request.headers.add({",
					"        key: 'Authorization',",
					"        value: 'Bearer ' + pm.globals.get(\"token\")",
					"    });",
					"",
					"    // set X-Request-ID header",
					"    pm.request.headers.add({",
					"        key: 'X-Request-ID',",
					"        value: pm.variables.replaceIn('{{$guid}}')",
					"    })",
					"",
					"    // set X-Correlation-ID header",
					"    pm.request.headers.add({",
					"        key: 'X-Correlation-ID',",
					"        value: pm.variables.replaceIn('{{$guid}}')",
					"    })"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "bb2bd18f-82aa-422d-beee-af529e9cc923",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
